//=============================================================================
//
// ブロックの個数ロゴの処理 [blockCross.cpp]
// Author : 長山拓実
//
//=============================================================================
#include "blockCross.h"
#include "renderer.h"

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 CBlockCross::m_pTexture = NULL;

//=============================================================================
// マクロ定義
//=============================================================================
#define BLOCK_CROSS_COLOR	(D3DXCOLOR(1.0f, 1.0f, 0.0f, 1.0f))

//=============================================================================
// ブロックの個数ロゴの生成処理
//=============================================================================
CBlockCross *CBlockCross::Create(D3DXVECTOR3 pos, float fWidth, float fHeight)
{
	CBlockCross *pBlockLogo = NULL;

	if (pBlockLogo == NULL)
	{
		// ブロックロゴクラスの生成
		pBlockLogo = new CBlockCross;

		if (pBlockLogo != NULL)
		{
			pBlockLogo->SetPosition(pos);
			pBlockLogo->SetWidth(fWidth);
			pBlockLogo->SetHeight(fHeight);
			pBlockLogo->Init();
			pBlockLogo->BindTexture(m_pTexture);
		}
	}

	return pBlockLogo;
}

//=============================================================================
// ブロックの個数ロゴクラスのコンストラクタ
//=============================================================================
CBlockCross::CBlockCross()
{
	// 値をクリア
}

//=============================================================================
// ブロックの個数ロゴクラスのデストラクタ
//=============================================================================
CBlockCross::~CBlockCross()
{
}

//=============================================================================
// ブロックの個数ロゴ初期化処理
//=============================================================================
HRESULT CBlockCross::Init(void)
{
	// ロゴ初期化処理
	CLogo::Init();

	CLogo::SetCol(BLOCK_CROSS_COLOR);

	return S_OK;
}

//=============================================================================
// ブロックの個数ロゴ終了処理
//=============================================================================
void CBlockCross::Uninit(void)
{
	// ロゴ終了処理
	CLogo::Uninit();
}

//=============================================================================
// ブロックの個数ロゴ更新処理
//=============================================================================
void CBlockCross::Update(void)
{
}

//=============================================================================
// ブロックの個数ロゴ描画処理
//=============================================================================
void CBlockCross::Draw(void)
{
	// ロゴ描画処理
	CLogo::Draw();
}

//=============================================================================
// ブロックの個数ロゴのテクスチャ読み込み処理
//=============================================================================
HRESULT CBlockCross::Load(void)
{
	// レンダラーを取得
	CRenderer *pRenderer;
	pRenderer = CManager::GetRenderer();

	LPDIRECT3DDEVICE9 pDevice = NULL;

	if (pRenderer != NULL)
	{
		pDevice = pRenderer->GetDevice();
	}

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice, BLOCKCROSS_LOGO_NAME, &m_pTexture);

	return S_OK;
}

//=============================================================================
// ブロックの個数ロゴのテクスチャ解放処理
//=============================================================================
void CBlockCross::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}