//=============================================================================
//
// 穴の処理 [particle3D.cpp]
// Author : 長山拓実
//
//=============================================================================
#include "hole.h"
#include "manager.h"
#include "renderer.h"
#include "field.h"

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 CHole::m_pTexture = NULL;

//=============================================================================
// 穴の生成処理
//=============================================================================
CHole *CHole::Create(D3DXVECTOR3 pos, float fDepth, float fWifth)
{
	CHole *pHole = NULL;

	if (pHole == NULL)
	{
		// 穴クラスの生成
		pHole = new CHole;

		if (pHole != NULL)
		{
			pHole->SetDepth(fDepth);
			pHole->SetWidth(fWifth);
			pHole->SetPos(pos);
			pHole->SetTextureU(10.0f);
			pHole->SetTextureV(10.0f);
			pHole->Init();								// 初期化処理
			pHole->BindTexture(m_pTexture);				// 種類の設定
			pHole->SetCol(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));				// 種類の設定
		}
	}
	return pHole;
}

//=============================================================================
// 穴クラスのコンストラクタ
//=============================================================================
CHole::CHole() : CPolygon(HOLE_PRIORITY)
{
	// 値をクリア
	m_nLife = 0;
	m_col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	m_move = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	m_rot = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
}

//=============================================================================
// 穴クラスのデストラクタ
//=============================================================================
CHole::~CHole()
{
}

//=============================================================================
// 穴の初期化処理
//=============================================================================
HRESULT CHole::Init(void)
{
	// 2Dオブジェクト初期化処理
	CPolygon::Init();

	return S_OK;
}

//=============================================================================
// 穴の終了処理
//=============================================================================
void CHole::Uninit(void)
{
	// 2Dオブジェクト終了処理
	CPolygon::Uninit();
}

//=============================================================================
// 穴の更新処理
//=============================================================================
void CHole::Update(void)
{
}

//=============================================================================
// 穴の描画処理
//=============================================================================
void CHole::Draw(void)
{
	// 2Dオブジェクト描画処理
	CPolygon::Draw();
}

//=============================================================================
// 穴のテクスチャ読み込み処理
//=============================================================================
HRESULT CHole::Load(void)
{
	// レンダラーを取得
	CRenderer *pRenderer;
	pRenderer = CManager::GetRenderer();

	LPDIRECT3DDEVICE9 pDevice = NULL;

	if (pRenderer != NULL)
	{
		pDevice = pRenderer->GetDevice();
	}

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice, GROUND_TEXTURE_NAME, &m_pTexture);

	return S_OK;
}

//=============================================================================
// 穴のテクスチャ解放処理
//=============================================================================
void CHole::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}